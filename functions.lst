     1                                  %define ROWS 80
     2                                  %define ROWZ 2*ROWS
     3                                  %define COLUMNS 25
     4                                  
     5                                  [BITS 32]
     6                                  
     7                                  [SECTION .text]
     8                                      ; 导入全局变量
     9                                      extern  display_x
    10                                      extern  display_y
    11                                      
    12                                      ; 导出函数
    13                                      global	write_mem8
    14                                      global  print_a
    15                                      global  print_string_with_color
    16                                      global  io_delay
    17                                      global  init8259a
    18                                      global  start_clock
    19                                      global  restart_clock
    20                                  
    21                                      init8259a:
    22                                          ; 1. 往端口20h(主片)或A0h(从片)写入ICW1
    23 00000000 B011                            mov al,   00010001b
    24 00000002 E620                            out 0x20, al   ;00010001  =  11h
    25 00000004 E854000000                      call io_delay
    26 00000009 E6A0                            out 0xA0, al
    27 0000000B E84D000000                      call io_delay
    28                                  
    29                                          ; 2. 往端口21h(主片)或A1h(从片)写入ICW2
    30 00000010 B020                            mov al, 00100000b;100000=0x20 IRQ0对应中断向量0x20
    31 00000012 E621                            out 0x21, al
    32 00000014 E844000000                      call io_delay
    33 00000019 B028                            mov al, 00101000b;00101000=0x28 IRQ8对应中断向量0x28
    34 0000001B E6A1                            out 0xA1, al
    35 0000001D E83B000000                      call io_delay
    36                                  
    37                                          ; 3. 往端口21h(主片)或A1h(从片)写入ICW3
    38 00000022 B004                            mov al, 00000100b
    39 00000024 E621                            out 0x21, al
    40 00000026 E832000000                      call io_delay
    41 0000002B B002                            mov al, 00000010b
    42 0000002D E6A1                            out 0xA1, al
    43 0000002F E829000000                      call io_delay
    44                                  
    45                                          ; 4. 往端口21h(主片)或A1h(从片)写入ICW4
    46 00000034 B001                            mov al, 00000001b
    47 00000036 E621                            out 0x21, al
    48 00000038 E820000000                      call io_delay
    49 0000003D E6A1                            out 0xA1, al
    50 0000003F E819000000                      call io_delay
    51                                  
    52 00000044 C3                              ret
    53                                  
    54                                      start_clock:
    55 00000045 B0FE                            mov al, 11111110b   ;only clock interrupt
    56 00000047 E621                            out 0x21, al        ;master 8259 OCW1
    57 00000049 E80F000000                      call io_delay
    58                                  
    59 0000004E B0FF                            mov al, 11111111b   ;close all interrupt in slave 8259
    60 00000050 E6A1                            out 0xA1, al        ;slave 8259  OCW1
    61 00000052 E806000000                      call io_delay
    62                                  
    63 00000057 C3                              ret
    64                                  
    65                                      restart_clock:
    66 00000058 B020                            mov al, 0x20; EOI
    67 0000005A E620                            out 0x20, al
    68 0000005C C3                              ret
    69                                  
    70                                      io_delay:
    71 0000005D 90                              nop
    72 0000005E 90                              nop
    73 0000005F 90                              nop
    74 00000060 90                              nop
    75 00000061 C3                              ret
    76                                  
    77                                      ; ========================================================================
    78                                      ;                  void write_mem8(int addr, int data);
    79                                      ; ========================================================================
    80                                      write_mem8:
    81 00000062 8B4C2404                        mov ecx,[esp+4]   ;[esp+8]中存放的是地址，将其读入ecx
    82 00000066 8A442408                        mov al, [esp+8]   ;[esp+16]中存放的是数据，将其读入al
    83 0000006A 8801                            mov [ecx],al
    84 0000006C C3                              ret
    85                                  
    86                                      print_a:
    87                                          ;mov eax, dword [display_y]
    88                                          ;mov ecx, ROWZ
    89                                          ;mul ecx
    90                                          ;mov ebx, dword [display_x]
    91                                          ;add eax, ebx
    92                                          ;mov edi, eax
    93 0000006D B078                            mov al, 'x'    
    94 0000006F B40F                            mov ah, 0x0f   ;不是青色 土红色
    95 00000071 31FF                            xor edi, edi
    96 00000073 65668907                        mov [gs:edi], ax        
    97 00000077 C3                              ret
    98                                          
    99                                      ; ========================================================================
   100                                      ; void print_string_with_color(unsigned char * string, unsigned char color);
   101                                      ; ========================================================================
   102                                      print_string_with_color:
   103 00000078 8B742404                            mov esi, dword [esp+4]   ;[esp+4]中存放的是地址，将其读入eax
   104                                          .loop:
   105 0000007C 803E00                              cmp byte [esi], 0x00
   106 0000007F 7463                                jz   .end
   107 00000081 803E0A                              cmp byte [esi], 0x0a    ;如果是换行符 \n ，就跳到下一行开头
   108 00000084 7513                                jnz .display
   109 00000086 FF05[00000000]                      inc dword [display_y]   ;next line display
   110 0000008C C705[00000000]0000-                 mov dword [display_x], 0
   111 00000094 0000               
   112 00000096 46                                  inc esi
   113 00000097 EBE3                                jmp .loop
   114                                          .display:
   115 00000099 8A1E                                mov bl,  byte [esi]
   116 0000009B A1[00000000]                        mov eax, dword [display_y]  ;上次在哪行显示
   117 000000A0 B9A0000000                          mov ecx, ROWZ
   118 000000A5 F7E1                                mul ecx
   119 000000A7 0305[00000000]                      add eax, dword [display_x]
   120 000000AD 89C7                                mov edi, eax
   121 000000AF 8A7C2408                            mov bh,  byte  [esp+8]    ;颜色
   122 000000B3 8A1E                                mov bl, byte [esi]
   123 000000B5 6566891F                            mov [gs:edi], bx
   124 000000B9 46                                  inc esi
   125 000000BA FF05[00000000]                      inc dword [display_x]
   126 000000C0 FF05[00000000]                      inc dword [display_x]
   127 000000C6 813D[00000000]A000-                 cmp dword [display_x], ROWZ
   128 000000CE 0000               
   129 000000D0 72AA                                jb  .loop
   130 000000D2 C705[00000000]0000-                 mov dword [display_x], 0
   131 000000DA 0000               
   132 000000DC FF05[00000000]                      inc dword [display_y]   ;next line display
   133 000000E2 EB98                                jmp .loop
   134                                          .end:
   135 000000E4 C3                                  ret   
   136                                              
   137                                          
   138                                          
   139                                          
   140                                          
   141                                          
   142                                          
   143                                          
   144                                          
   145                                          
